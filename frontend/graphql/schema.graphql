directive @composedGraph(version: Int!) on SCHEMA

directive @graph(name: String!, url: String!) on SCHEMA

directive @owner(graph: String!) on OBJECT

directive @key(fields: String!, graph: String!) on OBJECT

directive @resolve(graph: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

input LoginInput {
  usernameOrEmail: String!
  password: String!
}

type LoginResponse {
  username: String!
  email: String!
  role: String!
  token: String!
}

type LogoutResponse {
  status: String!
}

type MeResponse {
  username: String!
  email: String!
  role: String!
}

type Mutation {
  signup(newUser: SignupInput!): SignupResponse!
  login(credentials: LoginInput!): LoginResponse!
  logout: LogoutResponse!
}

type Query {
  # Get current user info
  me: MeResponse!
}

input SignupInput {
  username: String!
  email: String!
  password: String!
}

type SignupResponse {
  status: String!
}

type UserInfo {
  id: String!
  username: String!
}
